#!/bin/bash
#
# Buildscript for CCW
#

# setting variables
buildkeylocation="<%= @builddirectory -%>/<%= @staginguser -%>.key"
buildlog="<%= @builddirectory -%>/buildlog.log"
stagingserver="<%= @stagingserveraddress -%>"
staginguser="<%= @staginguser -%>"
stagingdir="<%= @stagingdir -%>"
docroot="<%= @docroot -%>"
dbName="<%= @dbName -%>"
dbUser="<%= @dbUser -%>"
dbPassword="<%= @dbPassword -%>"
mysqlRootPassword="<%= @mysqlRootPassword -%>"
dbDumpName="ccw.sql.gz"

# Rsync every webdirectory from staging server to production server
<% @webdirs.each do |webdir| -%>
rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ${buildkeylocation}" ${staginguser}@${stagingserver}:<%= webdir %>/* <%= webdir %> >> ${buildlog}
<% end -%>

# Rsync the database dump from staging server to /tmp
rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ${buildkeylocation}" ${staginguser}@${stagingserver}:${stagingdir}/db /tmp/ >> ${buildlog}

# Drop and (re)create database
mysql -u root -p${mysqlRootPassword} -e "DROP DATABASE IF EXISTS ${dbName}" >> ${buildlog}
mysql -u root -p${mysqlRootPassword} -e "CREATE DATABASE IF NOT EXISTS ${dbName}" >> ${buildlog}

# import compressed database dump 
gunzip < /tmp/db/${dbDumpName} | mysql -u root -p${mysqlRootPassword} ${dbName} >> ${buildlog}

# Assing correct permissions to database user
mysql -u root -p${mysqlRootPassword} -e "GRANT SELECT, INSERT, DELETE ON ${dbName}.* TO '${dbUser}'@'localhost' IDENTIFIED BY '${dbPassword}';" >> ${buildlog}
mysql -u root -p${mysqlRootPassword} -e "FLUSH PRIVILEGES;" >> ${buildlog}


